@startuml
!define MyBackgroundColor #lightblue
!define MyBorderColor #005f87

skinparam class {
  BackgroundColor MyBackgroundColor
  BorderColor MyBorderColor
}
skinparam classAttributeIconSize 0


class City{
  -victory_points : integer
  -money : integer
  -treasury : integer
  -ressources
  -number_of_shields : integer
  -scientific_symbols : struct symbol[]

  +trade()
  +constructBuilding()
  +constructWonder()
  +discardCard()
  +checkMilitaryVictory()
  +checkScientificVictory()
}

class Player{
  -type
  -isItHisTurn : bool
  +play()
}

struct ScientificSymbol{
  +name
  +amount
  
  +add()
}

class Card{
  -name
  -cost[]
  -owner  
  +getPrice()
}



class Building{
  -age : integer
  -visible : bool
  -type
  -chain_cost
  +build()
  -discardIt()
  
  
}
class Rawmaterials_browncards {
-produce_resources()
}
class Manufacturedgoods_greycards { 

-produce_resources() 
}
class CivilianBuildings_bluecards
{  
-increasevictorypoints()
}

class Scientificbuildings_greencards { 
-score_victory_points() 
-add_scientific symbol()
} 
class commercialbuildings_yellowcards { 
-add_coins()
-produce_resources()
-change_rules()
-increasevictorypoints() 
} 

class militarybuildings_redcards {  
-increasemilitarypower()
}
class Guilds_purplecards { 

-scorepoints()
} 

class Wonder{
  -activated : bool
  
  +build()
  +select()
  -useEffects()
}

class ProgressToken{
  -on_the_board : bool
  +useEffects()
}

class ConflictPawn{
  -current_position
  
  +move()
}


Card <|-- Building
Building <|-- Rawmaterials_browncards
Building <|-- Manufacturedgoods_greycards
Building <|-- CivilianBuildings_bluecards
Building <|-- Scientificbuildings_greencards
Building <|-- commercialbuildings_yellowcards
Building <|-- militarybuildings_redcards
Building <|-- Guilds_purplecards
Card <|-- Wonder
Card <|-- ProgressToken
City o-- "*" Card
City *-- "*" ScientificSymbol
City *-- "1" Player
City "2" --- "1" ConflictPawn
@enduml
